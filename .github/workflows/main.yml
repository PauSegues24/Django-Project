name: Projecte Django - Pau Segués Vitutia

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-doc:
    runs-on: ubuntu-latest

    steps:
    - name: Clona el repositori
      uses: actions/checkout@v3

    - name: Instal·la Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instal·la dependències manualment
      run: |
        python -m pip install --upgrade pip
        pip install Django

    - name: Aplica les migracions
      run: |
        python manage.py migrate

    - name: Executa els tests
      run: |
        python manage.py test

    - name: Genera documentació HTML amb Pydoc
      run: |
        mkdir -p docs
    
        export PYTHONPATH=$(pwd)
    
        find . -name "*.py" ! -path "./venv/*" ! -path "./*/migrations/*" | while read file; do
          # Només processa si hi ha __init__.py al directori (indica que és un paquet)
          if grep -q '__init__.py' <<< "$file" || [[ $(dirname "$file") == "." ]]; then
            module_path=$(echo "$file" | sed 's|^\./||' | sed 's|/|.|g' | sed 's|.py$||')
            echo "Generant doc per $module_path"
            pydoc -w "$module_path" || echo "Error amb $module_path, saltant..."
          fi
        done
    
        mv ./*.html docs/ || true
    
        echo "<html><head><title>Documentació Pydoc</title></head><body><h1>📚 Documentació Pydoc</h1><ul>" > docs/index.html
        for f in docs/*.html; do
          fname=$(basename "$f")
          echo "<li><a href=\"$fname\">$fname</a></li>" >> docs/index.html
        done
        echo "</ul></body></html>" >> docs/index.html

    - name: Publica documentació a GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        publish_branch: gh-pages

    - name: Actualitza enllaç al README.md sense duplicats
      run: |
        DOC_LINK="[📚 Documentació Pydoc](https://pausegues24.github.io/Django-Project/)"
        
        # Si el README no existeix, crea'l amb l'enllaç
        if [ ! -f README.md ]; then
          echo -e "# Django Project\n\n$DOC_LINK" > README.md
        else
          # Elimina qualsevol línia antiga relacionada amb el pydoc
          sed -i '/Documentació Pydoc/d' README.md
          # Afegeix l’enllaç al final només si no hi és
          echo -e "\n$DOC_LINK" >> README.md
        fi

        # Fes commit només si hi ha canvis
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add README.md
        git diff --cached --quiet || git commit -m "Actualitzat README amb enllaç a la documentació"
        git push origin master

